{"version":3,"sources":["components/Header.jsx","components/Activity.jsx","components/ActivitySpace.jsx","components/App.jsx","index.js"],"names":["Header","className","Activity","props","useState","hours","changeHour","minutes","changeMin","seconds","changeSec","running","changeRun","useEffect","watch","setInterval","clearInterval","activity","onClick","delete","token","ActivitySpace","act","changeAct","onChange","event","val","target","value","name","placeHolder","autoComplete","maxLength","preventDefault","addAct","App","list","changeList","deleteActivity","prev","filter","index","newActivity","map","theActivity","key","ReactDOM","render","document","getElementById"],"mappings":"sNAQeA,MAJf,WACI,OAAO,wBAAIC,UAAU,WAAU,kBAAC,IAAD,MAAxB,qB,oECyDIC,MAvDf,SAAkBC,GAAQ,IAAD,EAEOC,mBAAS,GAFhB,mBAEdC,EAFc,KAEPC,EAFO,OAGQF,mBAAS,GAHjB,mBAGdG,EAHc,KAGLC,EAHK,OAIQJ,mBAAS,GAJjB,mBAIdK,EAJc,KAILC,EAJK,OAKQN,oBAAS,GALjB,mBAKdO,EALc,KAKLC,EALK,KA+CrB,OAvCAC,qBAAU,WACN,IAAIC,EAAQ,KAmBZ,OAlBIH,EACAG,EAAQC,aAAY,WACD,IAAXN,EACAC,GAAU,SAACD,GAAD,OAAcA,EAAU,MAEnB,IAAXF,EACAC,GAAU,SAACD,GAAD,OAAcA,EAAU,MAElCD,GAAW,SAACD,GAAD,OAAYA,EAAQ,KAC/BG,GAAU,SAACD,GAAD,OAAa,MAE3BG,GAAU,SAACD,GAAD,OAAa,QAE5B,KAEHO,cAAcF,GAGX,kBAAME,cAAcF,MAC5B,CAACH,EAASN,EAAOE,EAASE,IAkBrB,yBAAKR,UAAU,kBACnB,4BAAKE,EAAMc,SAAX,UAA4BZ,GAAS,EAAI,EAAI,KAAMA,EAAnD,IAA2DE,GAAW,EAAI,EAAI,KAAMA,EAApF,IAA8FE,GAAW,EAAI,EAAI,KAAMA,GACvH,4BAAQS,QAjBZ,WACIN,GAAWD,KAgBoBA,EAA8B,kBAAC,IAAD,MAApB,kBAAC,IAAD,OACzC,4BAAQO,QAdZ,WACIN,GAAU,GACVF,EAAU,GACVF,EAAU,GACVF,EAAW,KAUa,kBAAC,IAAD,OACxB,4BAAQY,QARZ,WACIf,EAAMgB,OAAOhB,EAAMiB,SAOK,kBAAC,IAAD,S,iBCnBjBC,MAlCf,SAAuBlB,GAAQ,IAAD,EAEDC,mBAAS,IAFR,mBAEnBkB,EAFmB,KAEdC,EAFc,KAkB1B,OAAQ,6BACJ,0BAAMtB,UAAU,eACZ,2BACIuB,SAhBZ,SAAqBC,GACjB,IAAMC,EAAMD,EAAME,OAAOC,MACzBL,EAAUG,IAeFG,KAAK,cACLC,YAAY,cACZC,aAAa,MACbC,UAAU,KACVJ,MAAON,IAGX,4BAAQJ,QAjBhB,SAAiBO,GACbA,EAAMQ,iBACN9B,EAAM+B,OAAOZ,GACbC,EAAU,MAcoB,kBAAC,IAAD,UCDvBY,MA3Bf,WAAgB,IAAD,EAEgB/B,mBAAS,IAFzB,mBAEJgC,EAFI,KAEEC,EAFF,KAWX,SAASC,EAAelB,GACpBiB,GAAW,SAAAE,GACP,OAAOA,EAAKC,QAAO,SAACvB,EAAUwB,GAC1B,OAAOA,IAAUrB,QAM7B,OAAO,6BAAK,kBAAC,EAAD,MAAU,kBAAC,EAAD,CAAec,OAfrC,SAAqBQ,GACjBL,GAAW,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAiBG,UAcrB,yBAAKzC,UAAU,SAASmC,EAAKO,KAAI,SAACC,EAAaH,GAC3C,OAAQ,kBAAC,EAAD,CAAUxB,SAAU2B,EAAaC,IAAKJ,EAAOrB,MAAOqB,EAAOtB,OAAQmB,UCxBvFQ,IAASC,OACP,kBAAC,EAAD,MACEC,SAASC,eAAe,W","file":"static/js/main.b16c580a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nfunction Header() {\n    return <h1 className=\"heading\"><HourglassEmptyIcon />Activity Tracker</h1>;\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction Activity(props) {\n\n    const [hours, changeHour] = useState(0);\n    const [minutes, changeMin] = useState(0);\n    const [seconds, changeSec] = useState(0);\n    const [running, changeRun] = useState(false);\n    \n\n    useEffect(() => {\n        let watch = null;\n        if (running) {\n            watch = setInterval(() => {\n                if (seconds != 59) {\n                    changeSec((seconds) => (seconds + 1));\n                } else {\n                    if (minutes != 59) {\n                        changeMin((minutes) => (minutes + 1));\n                    } else {\n                        changeHour((hours) => (hours + 1));\n                        changeMin((minutes) => 0);\n                    }\n                    changeSec((seconds) => 0);\n                }\n            }, 1000);\n        } else {\n            clearInterval(watch);\n        }\n\n        return () => clearInterval(watch);\n    }, [running, hours, minutes, seconds]);\n\n\n    function toggleTime() {\n        changeRun(!running);\n    }\n\n    function reset() {\n        changeRun(false);\n        changeSec(0);\n        changeMin(0);\n        changeHour(0);\n    }\n\n    function trash() {\n        props.delete(props.token);\n    }\n\n    return (<div className=\"activity-block\">\n        <h2>{props.activity} Time: {hours <= 9 ? 0 : null}{hours}:{minutes <= 9 ? 0 : null}{minutes}:{seconds <= 9 ? 0 : null}{seconds}</h2>\n        <button onClick={toggleTime}>{!running ? <PlayArrowIcon /> : <PauseIcon />}</button>\n        <button onClick={reset}><ReplayIcon /></button>\n        <button onClick={trash}><DeleteIcon /></button>\n    </div>);\n}\n\nexport default Activity;","import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport Activity from './Activity'\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction ActivitySpace(props) {\n\n    const [act, changeAct] = useState(\"\");\n\n    // Updates the value of \"act\", (with the activity to be added)\n    function updateField(event) {\n        const val = event.target.value;\n        changeAct(val);\n    }\n\n    // Sends the activity in the form of a String to App.jsx,\n    // where it is to be added to list.\n    function sendAct(event) {\n        event.preventDefault();\n        props.addAct(act);;\n        changeAct(\"\"); \n    }\n\n    return (<div>\n        <form className=\"entry-field\">\n            <input\n                onChange={updateField}\n                name=\"newActivity\"\n                placeHolder=\"Activity...\"\n                autoComplete=\"off\"\n                maxLength=\"30\"\n                value={act} />\n\n\n            <button onClick={sendAct}><AddIcon /></button>\n        </form>\n    </div>);\n}\n\nexport default ActivitySpace;","import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport Header from \"./Header\"\nimport Activity from './Activity';\nimport ActivitySpace from \"./ActivitySpace\"\n\nfunction App() {\n\n    const [list, changeList] = useState([]);\n\n    // Adds activities taken from ActivitySpace form to list\n    function addActivity(newActivity) {\n        changeList(prev => {\n            return [...prev, newActivity];\n        });\n    }\n\n    function deleteActivity(token) {\n        changeList(prev => {\n            return prev.filter((activity, index) => {\n                return index !== token;\n            });\n        });\n    }\n\n\n    return <div><Header /><ActivitySpace addAct={addActivity} />\n        <div className=\"space\">{list.map((theActivity, index) => {\n            return (<Activity activity={theActivity} key={index} token={index} delete={deleteActivity} />);\n        })}</div>\n    </div>;\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />\n  , document.getElementById(\"root\")\n);"],"sourceRoot":""}